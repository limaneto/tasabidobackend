@csrf_exempt
@api_view(['POST'])
@permission_classes([AllowAny])
def cadastrar_monitoria(request):
    endereco = request.data.get('endereco', '')
    titulo = request.data.get('titulo', '')
    descricao = request.data.get('descricao', '')
    lat = request.data.get('lat', '')
    long = request.data.get('long', '')
    data_monitoria = request.data.get('data_monitoria')
    segunda_data_monitoria = request.data.get('segunda_data_monitoria')
    terceira_data_monitoria = request.data.get('terca_data_monitoria')
    id_usuario = request.data['id_usuario']
    id_materia = request.data['id_materia']
    user = User.objects.get(pk=id_usuario)
    materia = Materia.objects.get(pk=id_materia)
    monitoria = Monitoria(titulo=titulo, descricao=descricao, endereco=endereco, data_monitoria=data_monitoria, segunda_data_monitoria=segunda_data_monitoria,
                  terceira_data_monitoria=terceira_data_monitoria, lat=lat, long=long)
    ids_subtopico = request.data.get('ids_subtopicos')
    subtopicos = Subtopico.objects.filter(id__in=ids_subtopico)
    monitoria.usuario = user
    monitoria.materia = materia
    monitoria.save()
    monitoria.subtopico = subtopicos
    monitoria.save()
    monitoriaSer = MonitoriaSerializer(monitoria)
    if monitoria.pk is not None:

        message = u'Monitoria Cadastrada com Sucesso'
        return Response({'sucesso': True, 'message':message, 'id_monitoria':monitoria.pk})
    else:
        message = u'Ocorreu algum problema, tente mais tarde'
        return Response({'sucesso': False, 'message':message})

        @csrf_exempt
@api_view(['POST'])
def cadastrar_materia(request):
    nome = request.POST.get('nome', '')
    materia = Materia(nome=nome)
    materia.save()
    materiaSerialiazed = MateriaSerializer(materia)
    return Response({'sucesso': True, 'data': {'materia': materiaSerialiazed.data}})


@csrf_exempt
@api_view(['POST'])
def cadastrar_subtopico(request):
    nome = request.POST.get('nome')
    id_materia = request.POST['id_materia']
    materia = Materia.objects.get(pk=id_materia)
    subtopico = Subtopico(nome=nome)
    subtopico.materia = materia
    subtopico.save()
    subtopicoSerialiazed = SubtopicoSerializer(subtopico)
    return Response({'sucesso': True, 'data': {'subtopico': subtopicoSerialiazed.data}})

    @csrf_exempt
@api_view(['POST'])
def cadastrar_duvida(request):
    if request.method == 'POST':
        titulo = request.POST.get('titulo', '')
        descricao = request.POST.get('descricao', '')
        id_usuario = request.POST['id_usuario']
        id_materia = request.POST['id_materia']
        id_subtopico = request.POST['id_subtopico']
        user = User.objects.get(pk=id_usuario)
        materia = Materia.objects.get(pk=id_materia)
        subtopico = Subtopico.objects.get(pk=id_subtopico)
        duvida = Duvida(titulo=titulo, descricao=descricao)
        duvida.usuario = user
        duvida.materia = materia
        duvida.subtopico = subtopico
        duvida.save()
        success = True
        if duvida.pk is not None:
            message = 'Duvida Cadastrada com Sucesso'
            return Response({'success': success, 'message':message, 'id_duvida':duvida.pk})
        else:
            success = False
            message = 'Ocorreu algum problema'
            return Response({'success': success, 'message':message})

@csrf_exempt
@api_view(['POST'])
def atualizar_duvida(request):
    if request.method == 'POST':
        titulo = request.POST.get('titulo', '')
        descricao = request.POST.get('descricao', '')
        id_usuario = request.POST['id_usuario']
        id_materia = request.POST['id_materia']
        id_subtopico = request.POST['id_subtopico']
        id_duvida = request.POST['id_duvida']
        user = User.objects.get(pk=id_usuario)
        materia = Materia.objects.get(pk=id_materia)
        subtopico = Subtopico.objects.get(pk=id_subtopico)
        duvidaToDelete = Duvida.objects.get(pk=id_duvida)

        if duvidaToDelete.usuario_id == int(id_usuario):
            duvidaToDelete.delete()
        else:
            success = False
            message = 'Ocorreu algum problema'
            return Response({'success': success, 'message':message})

        duvida = Duvida(titulo=titulo, descricao=descricao)
        duvida.usuario = user
        duvida.materia = materia
        duvida.subtopico = subtopico
        duvida.save()
        success = True
        if duvida.pk is not None:
            message = 'Duvida Atualizada com Sucesso'
            return Response({'success': success, 'message':message, 'id_duvida':duvida.pk})
        else:
            success = False
            message = 'Ocorreu algum problema'
            return Response({'success': success, 'message':message})\






            @csrf_exempt
@api_view(['POST'])
def atualizar_duvida(request):
    if request.method == 'POST':
        titulo = request.POST.get('titulo', '')
        data_duvida = request.POST.get('data_duvida', '')
        descricao = request.POST.get('descricao', '')
        id_usuario = request.POST['id_usuario']
        id_subtopico = request.POST['id_subtopico']
        id_duvida = request.POST.get('id_duvida', '')
        user = User.objects.get(pk=id_usuario)
        subtopico = Subtopico.objects.get(pk=id_subtopico)
        duvidaToDelete = Duvida.objects.get(pk=id_duvida)

        if duvidaToDelete.usuario_id == int(id_usuario):
            duvidaToDelete.delete()
        else:
            success = False
            message = 'Ocorreu algum problema'
            return Response({'success': success, 'message':message})

        duvida = Duvida(titulo=titulo, descricao=descricao, data_duvida=data_duvida)
        duvida.usuario = user
        duvida.subtopico = subtopico
        duvida.save()
        success = True
        if duvida.pk is not None:
            message = 'Duvida Atualizada com Sucesso'
            return Response({'success': success, 'message':message, 'id_duvida':duvida.pk})
        else:
            success = False
            message = 'Ocorreu algum problema'
            return Response({'success': success, 'message':message})